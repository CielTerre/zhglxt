<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.seezoon.framework.modules.system.dao.SysGenDao" >
  <resultMap id="BaseResultMap" type="com.seezoon.framework.modules.system.entity.SysGen" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="table_name" property="tableName" jdbcType="VARCHAR" />
    <result column="pk_type" property="pkType" jdbcType="VARCHAR" />
    <result column="menu_name" property="menuName" jdbcType="VARCHAR" />
    <result column="module_name" property="moduleName" jdbcType="VARCHAR" />
    <result column="function_name" property="functionName" jdbcType="VARCHAR" />
    <result column="template" property="template" jdbcType="VARCHAR" />
    <result column="class_name" property="className" jdbcType="VARCHAR" />
    <result column="create_by" property="createBy" jdbcType="VARCHAR" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
    <result column="update_by" property="updateBy" jdbcType="VARCHAR" />
    <result column="update_date" property="updateDate" jdbcType="TIMESTAMP" />
    <result column="remarks" property="remarks" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.seezoon.framework.modules.system.entity.SysGen" extends="BaseResultMap" >
    <result column="columns" property="columns" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, table_name,pk_type, menu_name, module_name,function_name, template, class_name, create_by, create_date, 
    update_by, update_date, remarks
  </sql>
  <sql id="Blob_Column_List" >
    columns
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from sys_gen
    where id = #{id,jdbcType=VARCHAR} 
  </select>
   <select id="findList" resultMap="BaseResultMap" parameterType="com.seezoon.framework.modules.system.entity.SysGen" >
    select 
    <include refid="Base_Column_List" />
    from sys_gen
    <where>
    		<if test="menuName !=null and menuName!=''">
    			menu_name = #{menuName,jdbcType=VARCHAR}
    		</if>
    		<if test="moduleName !=null and moduleName!=''">
    			and module_name = #{moduleName,jdbcType=VARCHAR}
    		</if>
    		${dsf}
    </where>
    <!-- 有注入安全漏洞 后台系统忽略可以提高开发速度 -->
	<if test="sortField != null and sortField != '' and direction != null and direction !=''">
		order by ${sortField} ${direction}
	</if>
  </select>
  
  <select id="findTable" parameterType="String" resultType="com.seezoon.framework.modules.system.dto.DbTable">
      select TABLE_NAME name,comments from user_tab_comments
		<where>
			<if test="tableName != null and tableName!= ''">
				and table_name = upper(#{tableName})
			</if>
		</where>
  </select>
  <select id="findPkType" parameterType="String" resultType="String">
      SELECT a.data_type dataType
        FROM user_tab_cols a
          LEFT JOIN (SELECT
                       Col.Column_Name,
                       col.table_name,
                       con.constraint_type
                     FROM user_constraints con, user_cons_columns col
                     WHERE con.constraint_name = col.constraint_name) c
            ON a.table_name = c.table_name AND a.Column_Name = c.Column_Name
        WHERE c.constraint_type = 'P' AND a.TABLE_NAME = UPPER(#{tableName}) AND rownum = 1
        ORDER BY a.COLUMN_ID
  </select>
  <select id="findColumnByTableName" parameterType="String" resultType="com.seezoon.framework.modules.system.dto.DbTableColumn">
    select
         lower(a.COLUMN_NAME) name
      ,case a.NULLABLE when 'Y' then '1' ELSE '0' END nullable
      ,a.COLUMN_ID sort
      ,b.COMMENTS comments
      ,a.DATA_TYPE dataType
      ,DATA_LENGTH maxLength
      ,	a.DATA_TYPE columnType
      ,'' columnKey
      ,'' extra
    from user_tab_cols a LEFT JOIN user_col_comments b ON a.table_name = b.table_name AND a.Column_Name = b.Column_Name
      left join (select  Col.Column_Name,col.table_name,con.constraint_type from user_constraints con,user_cons_columns col
      where con.constraint_name=col.constraint_name) c on a.table_name = c.table_name and a.Column_Name=c.Column_Name
    where a.TABLE_NAME = UPPER(#{tableName}) and nvl(c.constraint_type,'C') not in('P')
	order by a.COLUMN_ID asc
  </select>

  <delete id="deleteByPrimaryKey"  >
    delete from sys_gen
    where id = #{id,jdbcType=VARCHAR} ${dsf}
  </delete>
  <insert id="insert" parameterType="com.seezoon.framework.modules.system.entity.SysGen" >
    insert into sys_gen (id, table_name,pk_type, menu_name, 
      module_name,function_name, template, class_name, 
      create_by, create_date, update_by, 
      update_date, remarks, columns
      )
    values (#{id,jdbcType=VARCHAR}, #{tableName,jdbcType=VARCHAR}, #{pkType,jdbcType=VARCHAR}, #{menuName,jdbcType=VARCHAR}, 
      #{moduleName,jdbcType=VARCHAR},#{functionName},#{template,jdbcType=VARCHAR}, #{className,jdbcType=VARCHAR}, 
      #{createBy,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP}, #{updateBy,jdbcType=VARCHAR}, 
      #{updateDate,jdbcType=TIMESTAMP}, #{remarks,jdbcType=VARCHAR}, #{columns,jdbcType=LONGVARCHAR}
      )
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.seezoon.framework.modules.system.entity.SysGen" >
    update sys_gen
    <set >
      <if test="tableName != null" >
        table_name = #{tableName,jdbcType=VARCHAR},
      </if>
      <if test="pkType != null" >
        pk_type = #{pkType,jdbcType=VARCHAR},
      </if>
      <if test="menuName != null" >
        menu_name = #{menuName,jdbcType=VARCHAR},
      </if>
      <if test="moduleName != null" >
        module_name = #{moduleName,jdbcType=VARCHAR},
      </if>
      <if test="functionName != null" >
        function_name = #{functionName,jdbcType=VARCHAR},
      </if>
      <if test="template != null" >
        template = #{template,jdbcType=VARCHAR},
      </if>
      <if test="className != null" >
        class_name = #{className,jdbcType=VARCHAR},
      </if>
      <if test="updateBy != null" >
        update_by = #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="updateDate != null" >
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="remarks != null" >
        remarks = #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="columns != null" >
        columns = #{columns,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR} ${dsf}
  </update>
</mapper>